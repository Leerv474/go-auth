definitions:
  handler.HTTPError:
    properties:
      message:
        example: error message
        type: string
    type: object
  handler.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  handler.RegisterRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login with username and password, returns access and refresh tokens
      parameters:
      - description: User login info
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/handler.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: User login
      tags:
      - auth
  /logout:
    get:
      description: Logs out the user by invalidating the refresh token cookie
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Logout user
      tags:
      - auth
  /refresh:
    get:
      description: Refresh access and refresh tokens using a refresh token cookie
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Refresh tokens
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Registers a new user with username and password
      parameters:
      - description: User registration info
        in: body
        name: registerRequest
        required: true
        schema:
          $ref: '#/definitions/handler.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Register new user
      tags:
      - auth
  /user:
    get:
      description: Retrieves the user ID from the access token in Authorization header
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.HTTPError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/handler.HTTPError'
      summary: Get user ID from access token
      tags:
      - auth
swagger: "2.0"
